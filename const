/*在类中，如果不希望数据被修改，可以使用const关键字加以限定。const可以用来休息成员变量和成员函数。

const成员变量
const成员变量的用法和普通const变量的用法相似，只需要在声明中加上const关键字。在初始化const成员变量只有一种方法，就是通过构造函数的初始化列表。

const成员函数
const成员函数可以使用类中的所有成员变量，但是不能修改他们的值，这种措施主要还是为了保护数据而设计的
const成员函数也叫常成员函数。

const对象
const可以用来修饰对象，成为常对象。一旦将对象定义为常对象之后，不管是哪种形式，该对象就只能被const修饰的成员（包括const成员变量和const成员函数），
因为非const成员可能会修改对象的数据（编译器也会这样假设），c++进制这样做



c++类的知识：
C++中访问类的私有（private）成员变量的方法，公共函数访问私有成员,


1.set/get接口
2.友元类
3.友元函数
4.类本身的成员函数

还可以使用指针修改private数据成员的值：
class Test
{
 private:
      int x;
      int y;
 public:
      explicit Test(int _x,int _y):x(_x),y(_y){}
      //explicit关键字的作用是修饰构造函数，被修饰的构造函数的类，不能发生相应的隐式的转换
      //只能显示的进行转换
      void Print(){cout<<x<<""<<y<<endl;}
};
int main(void)
{
   Test a(1.2);
   a.Printf();//输出结果1,2
   int *p=（int *）&a;//p指向x
   cout<<*p<<endl;//输出结果是
   p++；//p指向y
   cout<<*p<<endl;
   *p=5;
   a.Printf();
   cout<<*p<<endl;
   system("pause");
   
}
注意：int *p=(int *)&a；的形式进行等价。

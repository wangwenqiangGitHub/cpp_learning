   将时间戳转换为string类型;
  1 #include <stdio.h>                                                                                                    2 #include<iostream>
  3 #include <sstream>
  4 #include <time.h>
  5 int main ()
  6 {
  7     time_t t;
  8     struct tm * lt;
  9     time (&t);//获取Unix时间戳。
 10
 11     std::cout << t << std::endl;
 12
 13
 14  std::stringstream ss;
 15  ss << t ;
 16     std::string mytest = "abc"+ss.str();
 17
 18     std::cout << mytest << std::endl;
 19 //    lt = localtime (&t);//转为时间结构。
 20  //   printf ( "%d/%d/%d %d:%d:%d\n",lt->tm_year+1900,\
 21  //           lt->tm_mon, lt->tm_mday, lt->tm_hour, lt->tm_min, lt->tm_sec);//输出结果
 22
 23
 24     return 0;
 25 }
 



c语言将时间戳转换为字符串:struct timeval的两个属性分别是秒级和微秒级，都是long类型

头文件:
#include<sys/time.h>
char buf_temp[256];

struct timeval time;
gettimeoftoday(&time, NULL);
memset(buf_temp, sizeof(buf_temp),0x00);
sprintf(buf_temp, "%d", time.tv_sec);

// sprintf(buf_temp, "%d", time.tv_sec, tv.tv_usec / 1000);
该函数包含在stdio.h的头文件:
#include<stdio.h>
sprintd与printf函数的区别:二者功能相似,但是sprintf函数打印到字符串中,而printf函数输出在屏幕上.sprintf函数在完成其他数据转换成字符串类型的操作中应用广泛.
char str[20];
double f=14.309948;
sprintf(str,"%6.2f",f);

char str[20];
int a=20984,b=48090;
sprintf(str,"=m",a,b);
str[]="20984 48090";

测试完成的程序:
   #include<stdio.h>                                                                                                     2 #include<sys/time.h>
   #include<iostream>
   #include<cstring>
   #include<time.h>
   using namespace std;
   int main()
   {
      char buf_temp[256];
      struct timeval time;
      gettimeofday(&time, NULL);
      memset(buf_temp, sizeof(buf_temp),0x00);
      sprintf(buf_temp, "%ld%ld",time.tv_sec, time.tv_usec/1000);
      
      printf("this is a :%s\n",buf_temp);  
     
      cout << buf_temp << endl;
      return 0;
  }
